name: Pytest CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
#  pytest-direct:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out repository
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v3
#        with:
#          python-version: '3.9'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Create .env file
#        run: |
#          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
#          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
#
#      - name: Run Pytest
#        run: pytest -v

  build-and-test-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
          echo "SUPABASE_DATABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env

      - name: Build and run Docker container
        run: docker compose -f docker/docker-compose.yml up -d --build

      - name: Wait for services to be ready
        run: sleep 20 # Give the container a moment to start up, especially with a database

      - name: Run Pytest
        run: pytest

      - name: Stop containers
        if: always() # This step will run even if the tests fail
        run: docker compose -f docker/docker-compose.yml down
